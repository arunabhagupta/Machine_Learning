# Importing the libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Importing the dataset
dataset = pd.read_csv('../input/Position_Salaries.csv')
X = dataset.iloc[:,1:2].values
y = dataset.iloc[:,2:].values

# Splitting the dataset into Training and Test set
'''
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)
'''

# Feature Scaling
from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()
X = sc_X.fit_transform(X)
y = sc_y.fit_transform(y)

# Fitting SVR to the Dataset
from sklearn.svm import SVR
regressor = SVR(kernel = 'rbf')
regressor.fit(X,y)

# Predicting the new Results
y_pred = regressor.predict(6.5) # After feature scaling the data in X and y is transformed hence we need to undo it and get the salary data in original format
# tranform method takes array, hence converting 6.5 to an array
y_pred = sc_y.inverse_transform(regressor.predict(sc_X.transform(np.array([[6.5]]))))
y_pred


# Visualising the SVR Results
plt.scatter(X,y,color='red')
plt.plot(X,regressor.predict(X),color='Blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position Level')
plt.ylabel('Salary')
plt.show()

#  Visualising the SVR results with X_grid
X_grid = np.arange(min(X),max(X), 0.1)
X_grid = X_grid.reshape((len(X_grid),1))
plt.scatter(X,y, color = 'red')
plt.plot(X_grid, regressor.predict(X_grid), color = 'blue')
plt.title('Truth or Bluff of emp Salary (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()
